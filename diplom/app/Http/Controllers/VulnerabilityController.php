<?php

namespace App\Http\Controllers;

use App\Http\Requests\FileParser\ParserRequest;
use App\Models\Vulnerability;
use Throwable;

class VulnerabilityController extends Controller
{
    public function store(ParserRequest $request)
    {
        $file = $request->file('file');
        $data = explode("\n", file_get_contents($file));

        for ($iBDU = 0; $iBDU < count($data); $iBDU++) {
            set_time_limit(0);
            preg_match('/[\d]{4}-[\d]{5}/', $data[$iBDU], $dataBDU[$iBDU]);

            try {
                $htmlBDU = file_get_contents("https://cisoclub.ru/bdu" . (($dataBDU[$iBDU])[0]) . "/amp");
                try {
                    $htmlBDU = file_get_contents("https://cisoclub.ru/bdu" . (($dataBDU[$iBDU])[0]));
                } catch (Throwable $bdu) {
                    continue;
                }
            } catch (Throwable $bdu) {
                continue;
            }

            preg_match_all('/(CWE-[\d]{1,3})+?/', $htmlBDU, $dataCWE);

            for ($iCWE = 0; $iCWE < count($dataCWE[0]); $iCWE++) {
                preg_match('/[\d]{1,3}/', (($dataCWE[0])[$iCWE]), $indexCWE);

                try {
                    $htmlCWE = file_get_contents("https://cwe.mitre.org/data/definitions/" . $indexCWE[0] . ".html");
                } catch (Throwable $cwe) {
                    continue;
                }

                preg_match_all('/(CAPEC-[\d]{1,3})+?/', $htmlCWE, $dataCAPEC);
                if(empty($dataCAPEC[0])){
                    ($dataCAPEC[0])[0] = 'Not found';
                }

                for ($iCAPEC = 0; $iCAPEC < count($dataCAPEC[0]); $iCAPEC++) {
                    Vulnerability::query()->create([
                        'BDU' => "BDU:" . ($dataBDU[$iBDU])[0],
                        'CWE' => ($dataCWE[0])[$iCWE],
                        'CAPEC' => ($dataCAPEC[0])[$iCAPEC]
                    ]);
                }
            }
        }

        return view('parsing.index');
    }
}
